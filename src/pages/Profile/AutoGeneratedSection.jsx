import { useEffect, useState } from "react";
import dbApi from "../../utils/api";
import PropTypes from "prop-types";

const AutoGeneratedSection = ({ userId }) => {
  const [bookings, setBookings] = useState([]);
  const [applicants, setApplicants] = useState([]);

  useEffect(() => {
    const fetchBookingsAndApplicants = async () => {
      try {
        const bookingsData = await dbApi.getBookingsForUser(userId);
        setBookings(bookingsData);

        // 獲取 applicantId
        const applicantIds = bookingsData.map((booking) =>
          booking.provider_uid === userId
            ? booking.demander_uid
            : booking.provider_uid,
        );

        const applicantDataPromises = applicantIds.map((id) =>
          dbApi.getProfile(id),
        );
        const applicantsData = await Promise.all(applicantDataPromises);
        setApplicants(applicantsData);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchBookingsAndApplicants();
  }, [userId]);

  return (
    <div className="flex gap-4">
      {applicants && applicants.length > 0 ? (
        applicants.map((applicant, index) => (
          <div key={index} className="flex flex-col items-center">
            <img
              src={applicant.profile_picture}
              className="size-20 rounded-full border-2 border-white bg-red-100 object-cover object-center p-2 shadow-md"
              alt="author"
            />
            <p>{applicant.name}</p>
            <button className="mb-4 mt-2 max-w-max rounded-full bg-yellow-700 px-4 py-2 text-sm text-white">
              審核
            </button>
          </div>
        ))
      ) : (
        <p>Loading applicants...</p>
      )}
    </div>
  );
};

AutoGeneratedSection.propTypes = {
  userId: PropTypes.string.isRequired,
};

export default AutoGeneratedSection;
